name: Sync Deleted and Renamed Files in Localization Folder

on:
  push:
    branches:
      - main
    paths:
      - 'docs/**'  # Trigger only if files in the docs folder are changed

jobs:
  sync-files:
    runs-on: ubuntu-latest
    permissions:
      contents: write  # Allows pushing commits to the repository
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch the full history to detect changes properly

      - name: Detect languages from i18n folder
        id: detect-languages
        run: |
          # Detect the languages by listing directories under i18n/ with names that are exactly 2 or 5 characters long
          languages=$(find i18n -mindepth 1 -maxdepth 1 -type d | xargs -n 1 basename | grep -E '^.{2}$|^.{5}$')

          # Format the languages as a JSON array (single array, handle multiple lines correctly)
          languages_json=$(echo "$languages" | tr '\n' ' ' | awk '{printf "[\"%s\"", $1; for(i=2;i<=NF;i++) printf ",\"%s\"", $i; print "]"}')

          echo "Detected languages: $languages_json"
          echo "languages=$languages_json" >> $GITHUB_OUTPUT

      - name: Get modified, deleted, and renamed .md files from the last commit
        id: get-files
        run: |
          # Check if the commit message indicates a merge pull request
          MERGE_MESSAGE=$(git log -1 --pretty=%B)

          if [[ "$MERGE_MESSAGE" == *"Merge pull request"* ]]; then
              echo "This is a pull request merge."

              # Check if the commit was a fast-forward
              PARENT_COUNT=$(git rev-list --count --parents -n 1 HEAD | awk '{print NF-1}')
              if [ "$PARENT_COUNT" -eq 1 ]; then
                  echo "This was a fast-forward merge."

                  # Use the regular approach since it's a fast-forward merge
                  DELETED_FILES=$(git diff-tree -M --no-commit-id --name-status -r HEAD | grep -E '^D\s.*\.md$' | awk '{print $2}' | grep '^docs/' || true)
                  RENAMED_FILES=$(git diff-tree -M --no-commit-id --name-status -r HEAD | grep -E '^R.*\.md$' | awk '{print $3}' | grep '^docs/' || true)
              else
                  # Not a fast-forward, use the original merge diff logic
                  DELETED_FILES=$(git diff --name-status HEAD^1 HEAD | grep -E '^D\s.*\.md$' | awk '{print $2}' | grep '^docs/' || true)
                  RENAMED_FILES=$(git diff --name-status HEAD^1 HEAD | grep -E '^R.*\.md$' | awk '{print $3}' | grep '^docs/' || true)
              fi
          else
              echo "This is a regular commit."
              # Use the regular approach
              DELETED_FILES=$(git diff-tree -M --no-commit-id --name-status -r HEAD | grep -E '^D\s.*\.md$' | awk '{print $2}' | grep '^docs/' || true)
              RENAMED_FILES=$(git diff-tree -M --no-commit-id --name-status -r HEAD | grep -E '^R.*\.md$' | awk '{print $3}' | grep '^docs/' || true)
          fi

          # Set environment variables for deleted and renamed files
          if [ -n "$DELETED_FILES" ]; then
              DELETED_FILES=$(echo "$DELETED_FILES" | tr '\n' ' ')
              echo "deleted_files=$DELETED_FILES" >> $GITHUB_ENV
          fi

          if [ -n "$RENAMED_FILES" ]; then
              RENAMED_FILES=$(echo "$RENAMED_FILES" | tr '\n' ' ')
              echo "renamed_files=$RENAMED_FILES" >> $GITHUB_ENV
          fi

          echo "Deleted files: \"$DELETED_FILES\""
          echo "Renamed/Moved files: \"$RENAMED_FILES\""

      - name: Sync Deleted Files in Localization Folders
        if: env.deleted_files != ''
        run: |
          # Strip the JSON array format (remove brackets and quotes) to get the language list
          for lang in $(echo "${{ steps.detect-languages.outputs.languages }}" | sed 's/\[//g' | sed 's/\]//g' | sed 's/"//g' | tr ',' ' '); do
            echo "Processing language: $lang"
            for FILE in $deleted_files; do
              LOCALIZATION_FILE="i18n/$lang/docusaurus-plugin-content-docs/current/${FILE#docs/}"

              # Check if the file exists in the localization folder, then delete it
              if [ -f "$LOCALIZATION_FILE" ]; then
                git rm "$LOCALIZATION_FILE"
                echo "Deleted $LOCALIZATION_FILE for $lang"
              fi
            done
          done

      - name: Sync Renamed/Moved Files in Localization Folders
        if: env.renamed_files != ''
        run: |
          # Strip the JSON array format (remove brackets and quotes) to get the language list
          for lang in $(echo "${{ steps.detect-languages.outputs.languages }}" | sed 's/\[//g' | sed 's/\]//g' | sed 's/"//g' | tr ',' ' '); do
            echo "Processing language: $lang"
            for FILE in $renamed_files; do
              OLD_FILE=$(git diff --name-status HEAD^1 HEAD | grep '^R' | awk '{print $2}' | grep '^docs/')
              OLD_LOCALIZATION_FILE="i18n/$lang/docusaurus-plugin-content-docs/current/${OLD_FILE#docs/}"
              NEW_LOCALIZATION_FILE="i18n/$lang/docusaurus-plugin-content-docs/current/${FILE#docs/}"

              # Rename the corresponding file in the localization folder
              if [ -f "$OLD_LOCALIZATION_FILE" ]; then
                git mv "$OLD_LOCALIZATION_FILE" "$NEW_LOCALIZATION_FILE"
                echo "Renamed $OLD_LOCALIZATION_FILE to $NEW_LOCALIZATION_FILE for $lang"
              fi
            done
          done

      - name: Commit and Push Changes to Main
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'

          git add i18n/
          git commit -m "Sync deleted/renamed files in localization folders"
          git push origin main
